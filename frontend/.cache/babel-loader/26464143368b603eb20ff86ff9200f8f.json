{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport { handleRef } from './utils';\nexport var RefForward = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(RefForward, _React$Component);\n  function RefForward() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.currentNode = void 0;\n    _this.handleRefOverride = function (node) {\n      var _this$props = _this.props,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef;\n      handleRef(children.ref, node);\n      handleRef(innerRef, node);\n      _this.currentNode = node;\n    };\n    return _this;\n  }\n  var _proto = RefForward.prototype;\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.innerRef !== this.props.innerRef) {\n      handleRef(this.props.innerRef, this.currentNode);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    delete this.currentNode;\n  };\n  _proto.render = function render() {\n    var children = this.props.children;\n    return /*#__PURE__*/React.cloneElement(children, {\n      ref: this.handleRefOverride\n    });\n  };\n  return RefForward;\n}(React.Component);","map":{"version":3,"sources":["RefForward.tsx"],"names":["React","handleRef","RefForward","Component","currentNode","handleRefOverride","node","children","innerRef","props","ref","componentDidUpdate","prevProps","componentWillUnmount","render","cloneElement"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAAoC,SAApC;AAEA,OAAA,IAAaC,UAAb,GAAA,aAAA,UAAA,gBAAA,EAAA;EAAA,cAAA,CAAA,UAAA,EAAA,gBAAA,CAAA;EAAA,SAAA,UAAA,GAAA;IAAA,IAAA,KAAA;IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAAA,IAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;IAAA;IAAA,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,IAAA;IAAA,KAAA,CACEE,WADF,GAAA,KAAA,CAAA;IAAA,KAAA,CAGEC,iBAHF,GAGsB,UAACC,IAAD,EAAuB;MACzC,IAAA,WAAA,GAA+B,KAAA,CAAKG,KAApC;QAAQF,QAAR,GAAA,WAAA,CAAQA,QAAR;QAAkBC,QAAlB,GAAA,WAAA,CAAkBA,QAAlB;MAEAP,SAAS,CAAEM,QAAD,CAA2DG,GAA5D,EAAiEJ,IAAjE,CAATL;MACAA,SAAS,CAACO,QAAD,EAAWF,IAAX,CAATL;MAEA,KAAA,CAAKG,WAAL,GAAmBE,IAAnB;IACD,CAVH;IAAA,OAAA,KAAA;EAAA;EAAA,IAAA,MAAA,GAAA,UAAA,CAAA,SAAA;EAAA,MAAA,CAYEK,kBAZF,GAYEA,SAAAA,kBAAAA,CAAmBC,SAAnBD,EAAwC;IACtC,IAAIC,SAAS,CAACJ,QAAVI,KAAuB,IAAA,CAAKH,KAAL,CAAWD,QAAtC,EAAgD;MAC9CP,SAAS,CAAC,IAAA,CAAKQ,KAAL,CAAWD,QAAZ,EAAsB,IAAA,CAAKJ,WAA3B,CAATH;IACD;EACF,CAhBH;EAAA,MAAA,CAkBEY,oBAlBF,GAkBEA,SAAAA,oBAAAA,GAAuB;IACrB,OAAO,IAAA,CAAKT,WAAZ;EACD,CApBH;EAAA,MAAA,CAsBEU,MAtBF,GAsBEA,SAAAA,MAAAA,GAAS;IACP,IAAQP,QAAR,GAAqB,IAAA,CAAKE,KAA1B,CAAQF,QAAR;IAEA,OAAA,aAAO,KAAK,CAACQ,YAAN,CAAmBR,QAAnB,EAA6B;MAClCG,GAAG,EAAE,IAAA,CAAKL;IADwB,CAA7B,CAAP;EAGD,CA5BH;EAAA,OAAA,UAAA;AAAA,CAAA,CAAgCL,KAAK,CAACG,SAAtC,CAAA","sourcesContent":["import * as React from 'react';\nimport { handleRef, RefProps } from './utils';\n\nexport class RefForward extends React.Component<RefProps> {\n  currentNode?: Node | null;\n\n  handleRefOverride = (node: HTMLElement) => {\n    const { children, innerRef } = this.props;\n\n    handleRef((children as React.ReactElement & { ref: React.Ref<any> }).ref, node);\n    handleRef(innerRef, node);\n\n    this.currentNode = node;\n  };\n\n  componentDidUpdate(prevProps: RefProps) {\n    if (prevProps.innerRef !== this.props.innerRef) {\n      handleRef(this.props.innerRef, this.currentNode);\n    }\n  }\n\n  componentWillUnmount() {\n    delete this.currentNode;\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return React.cloneElement(children, {\n      ref: this.handleRefOverride,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}