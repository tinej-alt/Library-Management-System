{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Library-Management-System-MERN-master\\\\frontend\\\\src\\\\Context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./AuthReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  isFetching: false,\n  error: false\n};\n\n/* Reads the data from the Provider and changes INITIAL_STATE */\nexport const AuthContext = /*#__PURE__*/createContext(INITIAL_STATE);\n\n/* Children here are the Components that need to get the data.[In this Application we specified App COmponent as Child in index.js so that we can server every every component exist in the app */\n/* This will provide data to all the children that we are giving here */\n_c = AuthContext;\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n_c2 = AuthContextProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","AuthReducer","INITIAL_STATE","user","JSON","parse","localStorage","getItem","isFetching","error","AuthContext","AuthContextProvider","children","state","dispatch","setItem","stringify"],"sources":["C:/Users/HP/OneDrive/Desktop/Library-Management-System-MERN-master/frontend/src/Context/AuthContext.js"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\"\nimport AuthReducer from \"./AuthReducer\"\n\nconst INITIAL_STATE = {\n    user:JSON.parse(localStorage.getItem(\"user\")) || null,\n    isFetching:false,\n    error:false\n}\n\n/* Reads the data from the Provider and changes INITIAL_STATE */\nexport const AuthContext = createContext(INITIAL_STATE)\n\n/* Children here are the Components that need to get the data.[In this Application we specified App COmponent as Child in index.js so that we can server every every component exist in the app */\n/* This will provide data to all the children that we are giving here */\nexport const AuthContextProvider = ({children}) =>{\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n\n    useEffect(()=>{\n        localStorage.setItem(\"user\", JSON.stringify(state.user))\n      },[state.user])\n\n    return (\n        <AuthContext.Provider\n        value={{\n            user:state.user,\n            isFetching:state.isFetching,\n            error:state.error,\n            dispatch\n        }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC5D,OAAOC,WAAW,MAAM,eAAe;AAAA;AAEvC,MAAMC,aAAa,GAAG;EAClBC,IAAI,EAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;EACrDC,UAAU,EAAC,KAAK;EAChBC,KAAK,EAAC;AACV,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,gBAAGZ,aAAa,CAACI,aAAa,CAAC;;AAEvD;AACA;AAAA,KAHaQ,WAAW;AAIxB,OAAO,MAAMC,mBAAmB,GAAG,QAAe;EAAA;EAAA,IAAd;IAACC;EAAQ,CAAC;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,UAAU,CAACC,WAAW,EAAEC,aAAa,CAAC;EAEhEH,SAAS,CAAC,MAAI;IACVO,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACY,SAAS,CAACH,KAAK,CAACV,IAAI,CAAC,CAAC;EAC1D,CAAC,EAAC,CAACU,KAAK,CAACV,IAAI,CAAC,CAAC;EAEjB,oBACI,QAAC,WAAW,CAAC,QAAQ;IACrB,KAAK,EAAE;MACHA,IAAI,EAACU,KAAK,CAACV,IAAI;MACfK,UAAU,EAACK,KAAK,CAACL,UAAU;MAC3BC,KAAK,EAACI,KAAK,CAACJ,KAAK;MACjBK;IACJ,CAAE;IAAA,UAEGF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B,CAAC;AAAA,GAnBYD,mBAAmB;AAAA,MAAnBA,mBAAmB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}